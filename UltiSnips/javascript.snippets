global !p
def complete(t, opts):
	if t:
		opts = [ m[len(t):] for m in opts if m.startswith(t) ]
	if len(opts) == 1:
		return opts[0]
	return "(" + '|'.join(opts) + ')'
endglobal

snippet ! "create layout to js file" b
"use strict";


document.addEventListener("DOMContentLoaded", function () {
	$1
})
endsnippet

snippet # "getElementById" i
document.getElementById('$1')$2;
endsnippet

snippet . "getElementsByClass" i
document.getElementsByClass('$1')$2;
endsnippet

snippet class "classList" i
classList.$1`!p snip.rv=complete(t[1], ['add','remove','contains'])`(${2:'$3'});
endsnippet

#snippet cm "addClass" i
#classList.add('$1');
#endsnippet

#snippet cm "removeClass" i
#classList.remove('$1');
#endsnippet

#snippet cm "checkClass" i
#classList.contains('$1');
#endsnippet



snippet event "addEventListener" i
addEventListener('$1', ${2:function (event) {$3}})$4
endsnippet

snippet proto "setPrototype" i
Object.setPrototypeOf(${1:this}, $2);
endsnippet

snippet atr "setAttribyte" i
setAttribute("$1","$2");
endsnippet

snippet "(^(\s*)(var|)\s*)(this.|)([.\w]+) (=|:)\s*" "object" r
`!p
index = match.group(5).find("Proto")
if index > -1:
	stT = match.group(5)[0:index]	
	st = stT[0].upper() + stT[1:len(stT)]
	snip.rv = match.group(2) + "/* object : " + st + " prototype"
else:
	st = match.group(5)
	snip.rv = match.group(2) + "/* object : " + st
` / $1 {{{*/
`!p snip.rv = match.group(1) + match.group(4) + match.group(5) + ' ' + match.group(6)` {
$2
`!p 
if match.group(6) == ':':
	snip.rv = match.group(2)+'},'
else:
	snip.rv = match.group(2)+'};'
`
`!p
index = match.group(5).find("Proto")
if index > -1:
	stT = match.group(5)[0:index]	
	st = stT[0].upper() + stT[1:len(stT)]
else:
	st = match.group(5)
	snip.rv = match.group(2) + "/* object : " + st
snip.rv = match.group(2) + "/*" + st + " end}}}*/"
`
endsnippet


snippet "(^(\s*)(var|)\s*)(this.|)([.\w]+) (=|:)\s*(function\s*|)" "function" r
`!p snip.rv = match.group(2)`/* ${2:null} function `!p snip.rv = match.group(5)` ($3) / $4 {{{*/
`!p snip.rv = match.group(1) + match.group(4) + match.group(5) + ' ' + match.group(6)` function (${3/(byte\s)|(int\s)|(bool\s)|(float\s)|(str\s)|(mix\s)|(dom\s)|(obj\s)|(array\s)|(fun\s)|(\[)|(\])//g}) {
$5
`!p 
if match.group(6) == ':':
	snip.rv = match.group(2)+'},'
else:
	snip.rv = match.group(2)+'};'
`
`!p snip.rv = match.group(2)`/*`!p snip.rv = match.group(5)` end }}}*/
endsnippet

#snippet function "function and comment" b
#/*	${2:null} function $1($3) / $4 */
#function $1(${3/(int\s)|(bool\s)|(float\s)|(str\s)|(mix\s)|(dom\s)|(obj\s)|(array\s)|(fun\s)|(\[)|(\])//g}) {
#	$5
#};
#endsnippet

#snippet function "in object function and comment" b 
#/*	${2:null} function $1($3) / $4*/
#$1 : function (${3/(int\s)|(bool\s)|(string\s)|(float\s)|(str\s)|(mix\s)|(element\s)|(object\s)|(array\s)|(function\s)//g}) {
#	$5
#},
#endsnippet

#snippet object "global object and coment" b
#/*object $1 / $2 */
#var $1 = {
#	$3
#};
#endsnippet

#snippet object "in object object and coment" b
#/*object $1 / $2 */
#$1 : {
#	$3
#},
#endsnippet

snippet // "comment" i
/* $1 /`!p 
import getpass
from datetime import datetime
snip.rv = getpass.getuser() + ' ' + datetime.now().strftime('%d-%m-%Y %H:%M:%S')
`*/
endsnippet
